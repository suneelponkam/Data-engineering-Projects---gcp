1: the senetence is framed in the word by word format.

anime = (
    p1
    | "Read from a text file" >> beam.io.ReadFromText('/content/input/GCPSV.txt')
    | "Split rows" >> beam.FlatMap(lambda row: row.split(' '))
    | "Write to a text file" >> beam.io.WriteToText('/content/output/animepas.txt')
)
p1.run()

2:  the desired words are been removed in this code.


stop_words = {'and', 'the', 'is', 'in', 'it', 'of'}

def split_and_clean(text):
    words = text.split()
    for word in words:
        cleaned_word = word.lower().strip(",.!?")
        if cleaned_word not in stop_words:
            yield cleaned_word

with beam.Pipeline() as pipeline:
    (
        pipeline
        | 'ReadText' >> beam.io.ReadFromText('/content/input/GCPSV.txt')
        | 'SplitAndClean' >> beam.FlatMap(split_and_clean)
        | 'CountHashtags' >> beam.combiners.Count.PerElement()
        | 'WriteWords' >> beam.io.WriteToText('/content/processed')
    )
p1.run()